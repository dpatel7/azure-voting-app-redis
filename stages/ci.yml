parameters:
  - name: containerRegistryServiceConnection
    default: 'votingapptest'
  - name: imageRepository
    default: 'crvoteapptestuks'
  - name: containerRegistry
    default: 'crvoteapptestuks.azurecr.io'
  - name: dockerfilePath
    default: 'test/azure-vote/Dockerfile'
  - name: tag
    default: 'test tag'
  - name: k8sNamespace
    default: 'votingapp'
stages:
- stage: Build
  displayName: Build and push docker image
  jobs:  
  - job: Build
    displayName: Build image job
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: 'votingapptest'
    - task: Docker@2
      displayName: Build and push an image to ACR
      inputs:
        command: buildAndPush
        repository: ${{ parameters.imageRepository }}
        dockerfile: ${{ parameters.dockerfilePath }}
        containerRegistry: ${{ parameters.containerRegistryServiceConnection}}
        tags: ${{ parameters.tag }}
  - job: GenerateCIVersion
    steps:
    - bash:  |
        buildRef="voteapp_$(Build.BuildId)_$(date +'%d%m%y%T')"
        buildRef=${buildRef//:/_}
        echo $buildRef
        echo "##vso[task.setvariable variable=buildName;isOutput=true]$buildRef"
      name: buildName
  - job: PublishBuildArtifacts
    dependsOn: GenerateCIVersion
    variables:
      varFromGenerateCIVersion: $[ dependencies.GenerateCIVersion.outputs['buildName.buildName'] ]
    steps:
    - bash:  |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.25.2/yq_linux_amd64
        sudo chmod a+x /usr/local/bin/yq
        yq --version
        imageName="${{ parameters.containerRegistry }}/${{ parameters.imageRepository }}:${{ parameters.tag }}"
        # imageName=${imageName//''/}
        yq -s '"file_" + $index' azure-vote-all-in-one-redis.yaml
        yq -ie ".spec.template.spec.containers |= map(select(.image==\"mcr.microsoft.com/azuredocs/azure-vote-front:v1\").image |=\"$imageName\")" file_2.yml
        yq '.' file* > azure-vote-all-in-one-redis.yaml
        cat azure-vote-all-in-one-redis.yaml
      name: replaceImagetag
    - bash:  |
        echo 'new file name is $(varFromGenerateCIVersion)'
        cp -v azure-vote-all-in-one-redis.yaml '$(Build.ArtifactStagingDirectory)/$(varFromGenerateCIVersion).yaml'
      name: renameManifest
    # - task: CopyFiles@2
    #   displayName: PreparingArtifactStagingDirectory
    #   inputs:
    #     SourceFolder: '$(Build.SourcesDirectory)'
    #     Contents: 'azure-vote-all-in-one-redis.yaml'
    #     TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: PublishArtifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'votingappManifest'
        publishLocation: 'Container'
        



