
parameters:
  - name: containerRegistryServiceConnection
    default: 'votingapptest'
  - name: imageRepository
    default: 'crvoteapptestuks'
  - name: containerRegistry
    default: 'crvoteapptestuks.azurecr.io'
  - name: dockerfilePath
    default: 'test/azure-vote/Dockerfile'
  - name: tag
    default: 'test tag'
  - name: k8sNamespace
    default: 'votingapp'
  - name: imagePullSecret
    default: 'crvoteapptestuks1337cc55-auth'

  # # Container registry service connection established during pipeline creation
  # containerRegistryServiceConnection: 'df59741b-5bd6-4ddf-9687-eae3fc30194b'
  # imageRepository: 'dpatelazurevotingappredis'
  # containerRegistry: 'crvoteapptestuks.azurecr.io'
  # dockerfilePath: '**/Dockerfile'
  # tag: '$(Build.BuildId)'
  # imagePullSecret: 'crvoteapptestuks1337cc55-auth'

  # # Agent VM image name
  # vmImageName: 'ubuntu-latest'

  # # Name of the new namespace being created to deploy the PR changes.
  # k8sNamespaceForPR: 'review-app-$(System.PullRequest.PullRequestId)'

stages:
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    # condition: 
    displayName: Deploy to AKS cluster
    pool:
      vmImage: ubuntu-latest
    environment: 'dpatel7azurevotingappredis-1669.votingapp'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(containerRegistryServiceConnection)
          - bash: |
              manifestName=$(ls "$(System.ArtifactsDirectory)/votingappManifest")
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(System.ArtifactsDirectory)/votingappManifest/$(manifestName).yaml
              imagePullSecrets: |
                $(imagePullSecret)

    
